<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SixFoisNeuf</title><link>https://sixfoisneuf.fr/</link><description>Recent content on SixFoisNeuf</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 07 Jan 2021 21:00:00 +0000</lastBuildDate><atom:link href="https://sixfoisneuf.fr/index.xml" rel="self" type="application/rss+xml"/><item><title>Kindle Hacking: porting Doom to the Kindle 4</title><link>https://sixfoisneuf.fr/posts/kindle-hacking-porting-doom/</link><pubDate>Thu, 07 Jan 2021 21:00:00 +0000</pubDate><guid>https://sixfoisneuf.fr/posts/kindle-hacking-porting-doom/</guid><description>As promised, here is a writeup about how I ported Doom to my old Kindle 4! I will try to detail my thought process for each step, and why I chose to do it the way I did (spoiler: it&amp;rsquo;s mostly because that&amp;rsquo;s what worked first).
It could be useful to read the previous part if you haven&amp;rsquo;t yet, because it details how the OS exposes the e-ink screen and hardware buttons to applications.</description></item><item><title>Kindle hacking: a deeper dive into the internals</title><link>https://sixfoisneuf.fr/posts/kindle-hacking-deeper-dive-internals/</link><pubDate>Fri, 01 Jan 2021 22:12:00 +0000</pubDate><guid>https://sixfoisneuf.fr/posts/kindle-hacking-deeper-dive-internals/</guid><description>In this blog post, we will research in more details how the system interacts with all the different hardware components of this e-book reader. In the previous blog post, we stayed within Amazon&amp;rsquo;s &amp;ldquo;walled garden&amp;rdquo; (kind of): our apps had to use the Kindle Developement Kit, and with it all kinds of restrictions:
No socket connection. All network connections must be HTTP/S. Cannot react to key presses however we want: for example, pressing Menu always brings up a menu.</description></item><item><title>Kindle hacking: jailbreaking your Kindle 4 and writing Kindlets</title><link>https://sixfoisneuf.fr/posts/kindle-hacking-jailbreak/</link><pubDate>Sun, 27 Dec 2020 22:10:12 +0000</pubDate><guid>https://sixfoisneuf.fr/posts/kindle-hacking-jailbreak/</guid><description>I have been back at my folks for winter holiday, which means I&amp;rsquo;m rediscovering some old stuff I had laying around. One of these is a Kindle 4, an old ebook reader which was gathering dust in the corner of my room.
After seeing someone use it as a weather station, I started to look up how I could go about running custom code on this thing. It turns out it&amp;rsquo;s pretty easy to get SSH access to the device as root, and from there add custom applications, or even access the framebuffer directly.</description></item><item><title>Oculus Quest wireless casting</title><link>https://sixfoisneuf.fr/posts/oculus-quest-casting/</link><pubDate>Wed, 29 Jan 2020 18:48:00 +0000</pubDate><guid>https://sixfoisneuf.fr/posts/oculus-quest-casting/</guid><description>I recently caved in and acquired an Oculus Quest. Even if Oculus is now part of the Facebook conglomerate (ugh), this piece of hardware is really impressive, and relatively affordable: you essentially get all the hardware you need to get access to the VR ecosystem for about ~€450. No need for a beefy PC or anything of the sort!
On the technical side, it seems the headset runs a modified Android version (7.</description></item><item><title>About Me</title><link>https://sixfoisneuf.fr/about/</link><pubDate>Thu, 02 Jan 2020 00:00:00 +0000</pubDate><guid>https://sixfoisneuf.fr/about/</guid><description>Hey there :-) I&amp;rsquo;m Simon, a 24 y-o from France. I enjoy poking at malware, writing cool programs and scripts, Oxford commas, and anything related to digital forensics! I&amp;rsquo;m currently lucky enough to be doing all of that at my job :)
You can chat with me on Twitter or check out some of my projects on GitHub. You can also send me an email (it&amp;rsquo;s on my GitHub profile) but I tend to forget to reply to e-mails :-/ The best way to get in contact with me is via my Twitter.</description></item><item><title>Introducing RegRippy</title><link>https://sixfoisneuf.fr/posts/introducing-regrippy/</link><pubDate>Fri, 19 Apr 2019 09:32:12 +0000</pubDate><guid>https://sixfoisneuf.fr/posts/introducing-regrippy/</guid><description>This post was written as part of my work as a member of the Airbus CERT. Anectodes and opinions shared in this post only reflect my own beliefs and not necessarily my teammates’ or my employer’s.
When investigating an intrusion on a system, the Windows registry can be a treasure mine of information. From quick wins like grabbing the machine’s name or recent documents to more advanced techniques like parsing shellbags, you can get some very deep insight on what a machine was used for.</description></item><item><title>AlexCTF Writeup</title><link>https://sixfoisneuf.fr/posts/alexctf-writeup/</link><pubDate>Wed, 08 Feb 2017 17:01:11 +0100</pubDate><guid>https://sixfoisneuf.fr/posts/alexctf-writeup/</guid><description>The only challenge I solved during this CTF was the &amp;ldquo;unVM_me&amp;rdquo; reverse engineering challenge (finally! Something other than crypto!)
We were given a pyc (Python Bytecode) file containing the flag. Executing it asked for the flag, and told us if it was right or wrong.
Decompiling the bytecode I used PyCDC to decompile the pyc file. This gave me the following source code (I modified it to add some error checking to help with debugging):</description></item><item><title>BITSCTF Writeup</title><link>https://sixfoisneuf.fr/posts/bitsctf-writeup/</link><pubDate>Mon, 06 Feb 2017 14:59:00 +0100</pubDate><guid>https://sixfoisneuf.fr/posts/bitsctf-writeup/</guid><description>Here&amp;rsquo;s a quick writeup on the two challenges I solved (Banana Princess and Beginner&amp;rsquo;s luck) during BITSCTF with the Cryptis team. It was my first CTF and a great experience :D
Banana Princess For this challenge, we were given a PDF file which was said to have been encrypted.
Hexdump, search for a header By running hexdump -C MinionQuest.pdf | head, we can get the header of the PDF file.</description></item><item><title>Analysis of a Word macro virus - 2701.doc</title><link>https://sixfoisneuf.fr/posts/analysis-of-a-word-macro-virus-2701-dot-doc/</link><pubDate>Fri, 27 Jan 2017 10:46:08 +0100</pubDate><guid>https://sixfoisneuf.fr/posts/analysis-of-a-word-macro-virus-2701-dot-doc/</guid><description>On 2017-01-27, I received a suspicious email on an address I no longer use.
EDIT: I received two more emails with the same file, only the message was different. Is it a recent ongoing spam campaign?
Hello,
My name is Adam Buchbinder, I saw your GitHub repo and i&amp;rsquo;m pretty amazed. The point is that i have an open position in my company and looks like you are a good fit.</description></item><item><title>Nous sommes désolés de vous apprendre que...</title><link>https://sixfoisneuf.fr/posts/nous-sommes-desoles-de-vous-apprendre-que-dot-dot-dot/</link><pubDate>Thu, 26 Jan 2017 11:11:03 +0100</pubDate><guid>https://sixfoisneuf.fr/posts/nous-sommes-desoles-de-vous-apprendre-que-dot-dot-dot/</guid><description>Ce post est une traduction libre de &amp;ldquo;We Are Sorry To Inform You&amp;rdquo;
Il présente des commentaires de peers auxquels certains articles fondateurs de l&amp;rsquo;informatique et de la cryptographie moderne ont été envoyés.
E.W. DIJKSTRA &amp;ldquo;Goto Statements Considered Harmful&amp;rdquo; Cette publication essaie de nous convaincre que la fonctionnalité goto devrait être retirée des langages de programmation, ou au moins (puisque je ne pense pas qu&amp;rsquo;elle sera un jour éliminée) que les programmeurs cessent de l&amp;rsquo;utiliser.</description></item><item><title>3DS Hacking 101 (WIP)</title><link>https://sixfoisneuf.fr/posts/3ds-hacking-101/</link><pubDate>Mon, 23 Jan 2017 21:52:19 +0100</pubDate><guid>https://sixfoisneuf.fr/posts/3ds-hacking-101/</guid><description>3DS hacking can be a bit daunting to approach even by tech-savvy people because of the lingo and all the different security measures implemented by Nintendo. This post will try to clear everything up.
Most of the information here comes from 3DBrew.
Glossary o3DS(XL): Original 3DS (the first model) and its XL counterpart n3DS(XL): Upgraded 3DS (New 3DS &amp;amp; New 3DS XL) 2DS: the 2DS if functionnaly the same as an o3DS, so it&amp;rsquo;s just called &amp;ldquo;o3DS&amp;rdquo; CTR: codename for the 3DS NAND: Flash memory, the &amp;ldquo;hard disk&amp;rdquo; of your 3DS.</description></item></channel></rss>